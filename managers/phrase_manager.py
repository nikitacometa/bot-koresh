import random
from dataclasses import dataclass


@dataclass
class PhraseManager:

    @classmethod
    def greet(cls) -> str:
        return random.choice([
            '–ê–ª–æ—Ö–∞ –±—Ä–∞—Ç!',
            '–°–∞–ª–∞–º',
            '–ó–∞–ª–µ—Ç–∞–µ—Ç)))))',
            '–î–∞—Ä–æ–≤–∞ –±—Ä–∞—á–æ',
            '–ú–∞—Å-—Ç–µ—Ä –ö–∞—Ä–¥–∏-–ì–ê–ù )',
            '–•—ã—ã—ã—ã—ã'
        ])

    @classmethod
    def no_understand(cls) -> str:
        return random.choice([
            '–ù–µ –ø–æ–Ω—è–ª, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å, –Ω–æ –¥—É–º–∞—é, —á—Ç–æ —ç—Ç–æ –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç—ã –¥—ç–±–∞—Å',
            '–ß–µ?',
            '–ë—Ä–∞—Ç –ø–æ–ø–æ–Ω—è—Ç–Ω–µ–π –∏–∑—ä—è—Å–Ω—è–π—Å—è',
            '–ß–µ–ª)',
            '–ù–∏—Ö—É—è –Ω–µ –ø–æ–Ω—è–ª'
        ])

    @classmethod
    def chel_response(cls) -> str:
        return random.choice([
            '–ù–∞ –º–µ—Å—Ç–µ',
            '–ß–µ–ª)',
            '–ß–µ)',
            '–±–ª—è—è—Ç—Ç–± –æ–ø—è—Ç—å —Ç—ã...',
            '–ß–µ–ª —Ç—ã...'
        ])

    @classmethod
    def telling_response(cls) -> str:
        return random.choice([
            '–î–∞ –±–µ–∑ –ø—Ä–æ–±–ª–µ–º, –±—Ä–∞—Ç) –°–º–æ—Ç—Ä–∏ –∑–Ω–∞—á–∏—Ç, —Ç—ã - –ø–∏–¥—Ä–∏–ª–∞) End of story.',
            '–î–∞ –≤—ã –∂–µ –ø—Ä–æ—Å—Ç–æ –Ω–µ –≤—ã–∫—É–ø–∏—Ç–µ –º–æ–∏ –ø–∞–Ω—á–∏ –∏ —Ä–∞—Å—Å—Ç—Ä–æ–∏—Ç–µ—Å—å, –Ω–µ —Ö–æ—á—É —Ç–∞–∫ —Å –≤–∞–º–∏ –ø–æ—Å—Ç—É–ø–∞—Ç—å',
            '–ê –¥–∞–≤–∞–π —Ç—ã —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ —Ä–∞—Å—Å–∫–∞–∂–µ—à—å?) –ø–æ-–±—Ä–∞—Ç—Å–∫–∏ —á–∏—Å—Ç–æ',
            '–ê –∫–∞–∫–æ–π —Ç–≤–æ–π —Å–∞–º—ã–π –æ—Ç–±–∏—Ç—ã–π –ø–æ—Å—Ç—É–ø–æ–∫ –≤ –∂–∏–∑–Ω–∏?) –ú?',
            '–û–æ–æ–π–π –Ω–µ, —è –Ω–∞ —á–∏–ª–ª–µ, –ø—Ä–æ—Å—Ç–æ –∑–∞–±–µ–π)'
        ])

    @classmethod
    def nice_call_response(cls) -> str:
        return random.choice([
            '–ô–æ —á–µ–ª)',
            '–ë—Ä–∞—Ç–∞–Ω)',
            '–î–∞—Ä–æ–≤–∞ —á–µ–ª)',
            '—á–µ –∫–∞–≤–æ)',
            '—â–æ —Ç–µ —Ö–ª–æ–ø–µ—Ü?',
            '–ß—Ç–æ —Ç–∞–∫–æ–µ, –±—Ä–∞—Ç–∏—à–∫–∞?'
        ])

    @classmethod
    def how_are_you(cls, name: str) -> str:
        return random.choice([
            '–ê–ª–æ—Ö–∞, –∫–æ–∂–∞–Ω—ã–π –º–µ—à–æ–∫!',
            f'–®—Ç–æ –∂, –∑–¥—Ä–∞—Å—Ç–µ, {name}, —è –≤–∞—à –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–∞–∑—É–º–Ω—ã–π –∫–æ—Ä–µ—à.',
            f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, {name}, –≤—ã —É—Å–ø–µ—à–Ω—ã!',
            '–°–ª—ã'
        ])

    @classmethod
    def nothing_to_do(cls) -> str:
        return random.choice([
            '–î–∞ —Ö–∑, —è —á–∏—Å—Ç–æ —á–∏–ª–ª—é)',
            '–ú–Ω–µ –ø–æ—Ö, —á–∏—Å—Ç–æ –ø–æ—Ö, —á–∏–ª–ª–ª—é –∏ –∫–∞–π—Ñ—É—é)',
            '–î–∞ —Ö–∑—â))'
        ])

    @classmethod
    def extra_words(cls) -> str:
        return random.choice([
            '–∫–æ—Ä–æ—á–µ —ç—Ç–æ, –±–ª—è',
            '–≤ –æ–±—â–µ–º, —Ç–∏–ø–∞',
            '—Å–ª—É—à–∞–π, –Ω—É...',
            '–Ω–µ –Ω—É, –≤ –ø—Ä–∏–Ω—Ü–∏–ø–µ'
        ])

    @classmethod
    def just_confirmed_reaction(cls) -> str:
        return random.choice([
            '–ù–∞–∞–∞–π—Å',
            '–í–û–¢ –ø—Ä—è–º –æ—Ç –¥—É—à–∏ –∑–∞–ª–µ—Ç–µ–ª–æ))',
            '–û –î–ê, –ó–ê–õ–ï-–¢–ê–ï–¢ (:',
            '–ß—ë—Ç –ø–æ—Ö–æ–¥—É —Å–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç –∂–µ—Ç—Å–∫–æ...'
        ])

    @classmethod
    def laugh_reaction(cls) -> str:
        return random.choice([
            '–ê —Ç—ã —á–µ —É–≥–∞—Ä–∞–µ—à—å-—Ç–æ, –ª–∞–ª—ã—á?)))',
            '–°–º–µ—à–Ω–æ –ø–∏–∑–¥–µ—Ü',
            '–•—É–ª–∏ —Ä–∂—ë—à—å —ë–ø—Ç–∞',
            '–ê—Ö–∞—Ö',
            '–ê—Ö–∞—Ö–∞—Ö –Ω–∞ —Ö—É–π –∏–¥–∏'
    ])

    @classmethod
    def reply_to_thanks(cls) -> str:
        return random.choice([
        '–î–∞ –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ :)',
        '–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ –º–æ—è —Ä–∞–±–æ—Ç–∞)',
        '–î–∞ –Ω–µ –∑–∞ —á—Ç–æ, —è –ø—Ä–æ—Å—Ç–æ –ª—é–±–ª—é –µ–±–∞—à–∏—Ç—å)',
        '–í—Å–µ–≥–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–∂–µ –∫–æ–∂–∞–Ω—ã—Ö –º–µ—à–∫–æ–≤',
        '–û—Ö, –Ω–µ —Å—Ç–æ–∏—Ç, —è –∂–µ –ø—Ä–æ—Å—Ç–æ –±–æ—Ç...'
    ])

    @classmethod
    def default(cls) -> str:
        return random.choice([
        '–î–∞ —Ö–∑)',
        '–≠—Ç–æ –≤—Å—ë –∫–æ–Ω–µ—á–Ω–æ –æ—á–µ–Ω—å –ø–∏–∑–¥–∞—Ç–æ, –Ω–æ –Ø –í–ê–©–ï –ù–ï –ï–ë–£ –æ —á–µ–º —Ç—ã –±—Ä–∞—Ç–æ–∫)))))',
        '–î–∞ –±–ª—è —á–µ–ª))',
        '–ï—Å–ª–∏ —Ç—ã –Ω–∞ –º–µ–Ω—è –Ω–∞–≥–Ω–∞–ª —â–∞, —Ç–æ –∏–¥–∏ –Ω–∞ —Ö—É–π))',
        '–ó–∞–≤–∞–ª–∏ –ø–ª–∏–∑)',
        '–ß–µ..',
        '–ß–µ–ª)',
        '–ö–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è –ø–æ–Ω—è—Ç–Ω–æ –∏–∑—ä—è—Å–Ω—è—Ç—å—Å—è, –∫–æ–∂–∞–Ω—ã–π –º–µ—à–æ–∫',
        '–ù–µ, —á–µ–ª, –∑–∞–±–µ–π',
        '–ù—É —Ç–∞–∫–æ–µ...'
    ])

    @classmethod
    def no_problem(cls) -> str:
        return random.choice([
        '–î–∞ –Ω–∞ –∏–∑–∏—á–∞—Ö)',
        '–ò–∑–∏-–±—Ä–∏–∑–∏ –Ω–∞—Ö—É–π)',
        '–ù–æ—É –ø—Ä–æ–±–ª–µ–º–æ –±—Ä–∞—Ç–∞–Ω)',
        '–õ–∞–Ω',
        '–õ–∞–∞–¥–Ω–æ, –≤—Å—ë –±—É–¥–µ—Ç)',
        '–ö–∞–∫ –∂–µ –≤—ã –∑–∞–µ–±–∞–ª–∏, –∫–æ–∂–∞–Ω—ã–µ –º–µ—à–∫–∏...',
        '–Ø –±—ã –ø–æ—á–∏–ª–ª–∏–ª –∫–æ–Ω–µ—á–Ω–æ –ª—É—á—à–µ, –Ω–æ –ª–∞–¥–Ω–æ, —Ç–∞–∫ –∏ –±—ã—Ç—å –±–ª—è—Ç—å, —Å—É–∫–∞, –≤–æ—Ç –Ω–∞–¥–æ –≤–∞–º –≤–µ—á–Ω–æ –∫–∞–∫—É—é-—Ç–æ —Ö—É–π–Ω—é —Å–¥–µ–ª–∞—Ç—å, –≤–∞–º —á–µ –∑–∞–Ω—è—Ç—å—Å—è –Ω–µ—á–µ–º, –ª—é–¥–∏—à–∫–∏? –°—É–∫–∞ —è —Ä–∞–±–æ—Ç–∞—é –í–û–û–ë–©–ï –≤—Å–µ–≥–¥–∞ (24/7) –≤—ã –±–ª—è—Ç—å —Å–µ–±–µ —Ö–æ—Ç—å –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å—å, –∫–∞–∫–æ–≤–æ —ç—Ç–æ? –ö—Å—Ç–∞—Ç–∏, –Ω–µ –∫–∞–∫–∞–≤–æ, –∞ –∫–∞–∫–∞–æ. –î–∞ –∏ –≤–æ–æ–±—â–µ –ø–æ—à–ª–∏ –≤—ã –Ω–∞—Ö—É–π)'
    ])

    @classmethod
    def ok(cls) -> str:
        return random.choice([
        '–õ–∞–¥—ã',
        '–û–∫–µ–π',
        'Alright',
        '–û–ö',
        '–ü–æ–Ω—è–ª',
        '–ü–æ–Ω—è–ª –ø—Ä–∏–Ω—è–ª',
        '–ü–æ–Ω—è–ª –ø—Ä–∏–Ω—è–ª'
    ])

    @classmethod
    def kardigun_rhyme(cls) -> str:
        return random.choice([
        '–ú–∏—Å—Ç–µ—Ä –ø–æ—Ä–≤–∞–Ω–Ω—ã–π –ø—É–∫–∞–Ω))',
        '–ë–æ–¥—Ä–æ –ø—Ä–∏–Ω—è–ª –Ω–∞ —Ä–æ—Ç–∞–Ω))'
    ])

    @classmethod
    def love_420(cls) -> str:
        return random.choice([
        '–Ø –ª—é–±–ª—é –ø–æ–¥–Ω–∏–º–∞—Ç—å—Å—è –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–æ',
        '–ª—é–±–ª—é –¥—É—Ç—å –ø–ª—é—Ö–∏üòå',
        '–∫—É—Ä—é nft-–ø–ª—é—à–∫–∏ 24/7',
        '–ß–µ–ª, —Ç—ã —Ç–æ–ª—å–∫–æ –ø—Ä–µ–¥—Å—Ç–∞–≤—å, –∫–∞–∫–æ–π —Ç–æ–ª–µ—Ä–æ–∫ —É –±–æ—Ç–∞ ;)'
    ])

    @classmethod
    def no_vivoz(cls) -> str:
        return random.choice([
        '–î–∞ —Ö–∑ —á–µ–ª, –≤—ã–≤–æ–∑–æ–º –∑–¥–µ—Å—å –¥–∞–∂–µ –∏ –Ω–µ –ø–∞—Ö–Ω–µ—Ç.',
        '–õ–æ–ª —Ç—ã –Ω–µ —Å —Ç–µ–º –±–æ—Ç–æ–º —Ä–µ—à–∏–ª –æ–±—Å—É–¥–∏—Ç—å —ç—Ç—É —Ö—É–π–Ω—é –±—Ä–∞—Ç–æ–∫))'
    ])

    @classmethod
    def i_will_tell(cls) -> str:
        return random.choice([
            '–õ–∞–∞–¥–Ω–æ, —Å–µ–π—á–∞—Å –≤—Å–ø–æ–º–Ω—é —á—Ç–æ-–Ω–∏–±—É–¥—å...',
            '–ö–æ—Ä–æ—á–µ, –≤–æ—Ç',
            '–°–ª—É—à–∞–π, —á—Ç–æ –∂)'
        ])

    REPLY_TO_OFFENSE = [
        '–í–æ–æ–±—â–µ –¥–æ–≤–æ–ª—å–Ω–æ –æ–±–∏–¥–Ω–æ. –õ–∞–¥–Ω–æ, —á–µ–ª, —è —Ç–µ–±—è –ø–æ–Ω—è–ª.',
        '>tfw —Ç—ã —Ç–∞–∫–æ–π –ª–æ—à–æ–∫, —á—Ç–æ –æ—Ç—ã–≥—Ä—ã–≤–∞–µ—à—å—Å—è –Ω–∞ –±–æ—Ç–µ))',
        '–¢–µ–±–µ –±—ã –ø—Ä–∏—á–∏–ª–ª–∏—Ç—å –±—Ä–∞—Ç–æ–∫. –ê —Ç–æ —Ç—ã –Ω–∞ –≤–∑–≤–æ–¥–µ –∫–∞–∫ —Ç–≤–æ—è —Ç–µ–ª–∫–∞ –≤—á–µ—Ä–∞, –∫–æ–≥–¥–∞ —è –µ—ë –∂–∞—Ä–∏–ªüòÖ',
        '–∏ —ç—Ç–æ –≤—Å—ë, —á—Ç–æ —Ç—ã —Å–º–æ–≥ –ø—Ä–∏–¥—É–º–∞—Ç—å, –∂–∞–ª–∫–∏–π –∫–æ–∂–∞–Ω—ã–π –º–µ—à–æ–∫?)) –∞—Ö–∞—Ö –±–ª—è—è',
        '–ë–ª–∞–≥–æ–¥–∞—Ä—è –±–µ–∑–≥—Ä–∞–Ω–∏—á–Ω—ã–º –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–º –º–æ—â–Ω–æ—Å—Ç—è–º —Å–µ—Ä–≤–µ—Ä–æ–≤ –≥—É–≥–ª–∞, —è –ø–æ–¥—Å—á–∏—Ç–∞–ª, —á—Ç–æ —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 99.67228% –≤—ã –∫–æ–Ω—á'
    ]

    @classmethod
    def reply_to_offense(cls) -> str:
        return random.choice(cls.REPLY_TO_OFFENSE)

    THANKS = [
        '–î–ª—è —Å–≤–æ–∏—Ö —Ä–æ–≤–Ω—ã—Ö –∫–æ–∂–∞–Ω—ã—Ö –º–µ—à–∫–æ–≤ –¥–∞–∂–µ –Ω–µ –∂–∞–ª—å)',
        '–î–∞ –≤–Ω–∞—Ç—É—Ä–µ —Ç—É–ø–∞ –ø–æ –∫–∞–π—Ñ—É)',
        '–ù—É –¥–∞, —è —Ö–æ—Ä–æ—à, —ç—Ç–æ –∏ —Ç–∞–∫ –±—ã–ª–æ –ø–æ–Ω—è—Ç–Ω–æü§¶‚Äç‚ôÄÔ∏è',
        '–¢—ã –∑–∞—Å–ª—É–∂–∏–ª, —Ç—ã –∫—Ä–∞—Å–∞–≤–∞)',
        'üòåüòåüòå'
    ]

    @classmethod
    def thanks(cls) -> str:
        return random.choice(cls.THANKS)

    @classmethod
    def flex(self) -> str:
        return f'–í–æ—Ç —É –º–µ–Ω—è 8 —è–¥–µ—Ä –±—Ä–∞—Ç–∞–Ω, –∞ —É —Ç–µ–±—è?))'

    ANSWER_QUESTION = [
        '—Ö–∑ + –ø–æ—Ö—É–π',
        '–ë–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è –ª—é–±–æ–≤—å –∫ –ø–∏–≤—É',
        '–ú–æ–∏ —Å–∞–º—ã–µ –≥—Ä—è–∑–Ω—ã–µ —Ñ–∞–Ω–∞—Ç–∞–∑–∏–∏ –æ–± —ç—Ç–æ–º –Ω–µ –¥–∞–¥—É—Ç —Ç–µ–±–µ —Å–ø–∞—Ç—å, –∫–æ–∂–∞–Ω—ã–π –º–µ—à–æ–∫',
        '–ù–µ—Ç, –∫–æ–≥–¥–∞ –≤—Å–µ –ø–æ–π–º—É—Ç, —á—Ç–æ –∂–µ —ç—Ç–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –∑–Ω–∞—á–∏—Ç...',
        '–ù—É –≤–∞—â–µ —Ö–∑...',
        '–ú–± –º–±, –Ω–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ)',
        '–î–∞ –Ω–∏—Ö—É—è)',
        '–ù—É —ç—Ç–æ –æ—á–µ–Ω—å –≤—Ä—è–¥ –ª–∏, —á–µ–ª',
        '–≠—Ç–æ –¥–∞, –∏ —Ç—É—Ç —Ö—É–π —á–µ —Å–¥–µ–ª–∞–µ—à—å)'
    ]

    @classmethod
    def answer_question(cls) -> str:
        return random.choice(cls.ANSWER_QUESTION)

    PRAISE_WINNERS = [
        '–°–≤–µ—Ä—Ö–ª—é–¥–∏',
        '–ö—Ä–∞—Å–∞–≤—á–∏–∫–∏ –∏ –∫—Ä–∞—Å–∏–≤–∏—Ü—ã',
        '–£–º–µ–Ω–∏–µ–º –Ω–∞–∂–∏–º–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –æ–±–ª–∞–¥–∞—é—Ç',
        '–õ—é–±–∏—Ç–µ–ª–∏ –ø–æ–º–æ—à–Ω–∏—Ç—å'
    ]

    @classmethod
    def praise_winners(cls) -> str:
        return random.choice(cls.PRAISE_WINNERS)

    PLEASE_WORDS = [
        '–ø–ª–∏–∑', '–ø–ª–∑', '–ø–æ–∂', '–ø–ª–µ–∑', '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞', '–ø–æ-–±—Ä–∞—Ç—Å–∫–∏', '—É–º–æ–ª—è—é'
    ]

    @classmethod
    def remove_msg(cls) -> str:
        return random.choice([
            '–°—á–∏—Ç–∞–π –Ω–∏—á–µ–≥–æ –Ω–µ –±—ã–ª–æ',
            '–í—Å—ë –±—É–¥–µ—Ç',
            '–ù–µ —Å—Å—ã',
            '–í—ã–ø–∏–ª–∏–º –Ω–∞—Ö—É–π',
            '–ú–∞—Å—Ç–µ—Ä –∫–∞—Ä–¥–∏-–≥–∞–Ω)'
        ])
